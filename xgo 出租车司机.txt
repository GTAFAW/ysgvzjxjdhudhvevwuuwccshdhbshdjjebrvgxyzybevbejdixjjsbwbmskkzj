local vu = game:GetService("VirtualUser")
game:GetService("Players").LocalPlayer.Idled:connect(function()
   vu:Button2Down(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
   wait(1)
   vu:Button2Up(Vector2.new(0,0),workspace.CurrentCamera.CFrame)
end)
spawn(function()
    local Players = game:GetService("Players")
    local function onPlayerAdded(player)
        if player:GetRankInGroup(11987919) >149 then
            game.Players.LocalPlayer:Kick("汽车因工作人员而踢 "..player.Name.." joined your game")
        else
            warn(player.Name,"刚加入游戏")
        end
    end
    end)
    spawn(function()
warn("反员工现在正在运行")
        while wait() do
        for i,v in pairs(game.Players:GetPlayers()) do
        if v:GetRankInGroup(11987919) >149 then
            game.Players.LocalPlayer:Kick("Auto Kicked Due to Staff Member "..v.Name.." is in your game")
        end
    end
    wait(5)
    end
    end)
local ui = loadstring(game:HttpGet("https://raw.githubusercontent.com/GTAFAW/neilonmacedo153/refs/heads/main/xgoui.txt"))();        
local win = ui:new("goto出租车司机")
--
local UITab1 = win:Tab("『信息』",'6035145364')

local about = UITab1:section("『信息』",true)
about:Label("作者：goto_O")
about:Label("goto出租车司机")
about:Label("你的注入器:"..identifyexecutor())
about:Label("你的用户名:"..game.Players.LocalPlayer.Character.Name)
about:Label("xgo:哈哈")
local UITab2 = win:Tab("『主要』",'16060333448')

local about = UITab2:section("『xxxxxxxgo』",true)
about:Toggle("自动钱","Toggle",false,function(state)
getfenv().test2 = (state and true or false)
pcall(function()
game:GetService("ReplicatedStorage").Quests.Contracts.CancelContract:InvokeServer(game:GetService("Players").LocalPlayer.ActiveQuests:FindFirstChildOfClass("StringValue").Name)
game:GetService("ReplicatedStorage").Quests.Contracts.CancelContract:InvokeServer(game:GetService("Players").LocalPlayer.ActiveQuests:FindFirstChildOfClass("StringValue").Name)
end)
while getfenv().test2 do
    wait()
    if not  game:GetService("Players").LocalPlayer.ActiveQuests:FindFirstChild("contractBuildMaterial") then
        game:GetService("ReplicatedStorage").Quests.Contracts.StartContract:InvokeServer("contractBuildMaterial")
repeat task.wait()
until game:GetService("Players").LocalPlayer.ActiveQuests:FindFirstChild("contractBuildMaterial")
    end
repeat task.wait()
task.spawn(function()
game:GetService("ReplicatedStorage").Quests.DeliveryComplete:InvokeServer("contractMaterial")
game:GetService("ReplicatedStorage").Quests.DeliveryComplete:InvokeServer("contractMaterial")
game:GetService("ReplicatedStorage").Quests.DeliveryComplete:InvokeServer("contractMaterial")
end)
until game:GetService("Players").LocalPlayer.ActiveQuests.contractBuildMaterial.Value == "!pw5pi3ps2"
wait()
game:GetService("ReplicatedStorage").Quests.Contracts.CompleteContract:InvokeServer()
end
end)
about:Toggle("自动钱[自动加入]","Toggle",false,function()
  example:AddButton("",function()
writefile("taxibossautomoney.txt",game:HttpGet("https://pastebin.com/raw/HuKppzEV"))
loadstring(game:HttpGet("https://pastebin.com/raw/HuKppzEV"))()
  end)
about:Toggle("自动寻找客户[自动化]","Toggle",false,function(state)
    getfenv().customersfarm = (state and true or false)
    pcall(function()
       game:GetService("Workspace").GaragePlate:Destroy()
       end)
       for i,v in pairs(game:GetService("Workspace").World.Industrial.Port:GetChildren()) do
          if string.find(v.Name,"Container") then
             v:Destroy()
          end
       end
    getfenv().numbers = 0
    getfenv().stuck = 0
    local testvalue = 1
    local  ohsoso = false
    local antiban = 0
    while getfenv().customersfarm do
        wait()
        pcall(function()
    if game.Players.LocalPlayer.Character.Humanoid.SeatPart ~= nil then
    local chr = game.Players.LocalPlayer.Character
    local car = chr.Humanoid.SeatPart.Parent.Parent
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {chr,car,workspace.Camera}
    raycastParams.FilterType = Enum.RaycastFilterType.Exclude
    raycastParams.IgnoreWater = false
     ohsoso = false
     if game:GetService("Players").LocalPlayer.variables.inMission.Value == true and not game:GetService("Workspace").ParkingMarkers:FindFirstChild("destinationPart") then
        antiban=antiban+1
        wait(1)
     elseif  antiban > 10 then
        game.Players.LocalPlayer:Kick("Kicked Due to game being glitched")
        end
       if game:GetService("Players").LocalPlayer.variables.inMission.Value == true and game:GetService("Workspace").ParkingMarkers:FindFirstChild("destinationPart") and game.Players.LocalPlayer:DistanceFromCharacter(game:GetService("Workspace").ParkingMarkers:WaitForChild("destinationPart").Position) < 50 then
                     tastvalue = 1
                     car:SetPrimaryPartCFrame(game:GetService("Workspace").ParkingMarkers.destinationPart.CFrame+Vector3.new(0,3,0))
                       car.PrimaryPart.Velocity = Vector3.new(0,0,0)
                     game:GetService("VirtualInputManager"):SendKeyEvent(true,304,false,game)
                     wait(1)
                     car:SetPrimaryPartCFrame(game:GetService("Workspace").ParkingMarkers.destinationPart.CFrame+Vector3.new(0,3,0))
                     car.PrimaryPart.Velocity = Vector3.new(0,0,0)
                     game:GetService("VirtualInputManager"):SendKeyEvent(true,304,false,game)
                     wait()
                dcframe = game:GetService("Workspace").ParkingMarkers.destinationPart.CFrame
    repeat wait()
         if (car.PrimaryPart.Position-Vector3.new(dcframe.X,dcframe.Y,dcframe.Z)).magnitude > 3 then
                              car.PrimaryPart.Velocity = Vector3.new(0,0,0)
                     car:PivotTo(dcframe)
                     wait(0.1)
                     game:GetService("VirtualInputManager"):SendKeyEvent(true,304,false,game)
                     car.PrimaryPart.Velocity = Vector3.new(0,0,0)
         end
    until not game:GetService("Workspace").ParkingMarkers:FindFirstChild("destinationPart") or getfenv().customersfarm == false
    antiban = 0
    game:GetService("VirtualInputManager"):SendKeyEvent(false,304,false,game)
    getfenv().numbers=getfenv().numbers+1
                    testvalue = 1
                     task.wait()
    
    elseif  workspace:Raycast(game.Players.LocalPlayer.Character.HumanoidRootPart.Position, Vector3.new(0, -100, 0),raycastParams).Instance.Name == "Terrain" and ohsoso == false then
       getfenv().rat = nil
       local distance = math.huge
       for i,v in pairs(game:GetService("Workspace").World:GetDescendants()) do
          if string.find(v.Name,"road") and v.ClassName == "Part" or string.find(v.Name,"Road") and v.ClassName == "Part"    then
              local Dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-v.Position).magnitude
       if Dist < distance then
       distance = Dist
       getfenv().rat = v
       end
       end
       end
    car:PivotTo(getfenv().rat.CFrame)
     ohsoso = true
    elseif game:GetService("Players").LocalPlayer.variables.inMission.Value == true  then
    warn("Tester")
    local chr = game.Players.LocalPlayer.Character
    local car = chr.Humanoid.SeatPart.Parent.Parent
    print(testvalue)
    testvalue = testvalue-.02 
    if testvalue < 0 then
         getfenv().rat = nil
       local distance = math.huge
       for i,v in pairs(game:GetService("Workspace").World:GetDescendants()) do
          if string.find(v.Name,"road") and v.ClassName == "Part" or string.find(v.Name,"Road") and v.ClassName == "Part"  then
              local Dist = (game.Players.LocalPlayer.Character.HumanoidRootPart.Position-v.Position).magnitude
       if Dist < distance then
       distance = Dist
       getfenv().rat = v
       end
       end
       end
    car:PivotTo(getfenv().rat.CFrame)
getfenv().stuck = getfenv().stuck+1
        testvalue = 1 
    end
    pcall(function()
    local PathfindingService = game:GetService("PathfindingService")
    local TweenService = game:GetService("TweenService")
    local part1 = game.Players.LocalPlayer.Character.HumanoidRootPart
    local part2 = game:GetService("Workspace").ParkingMarkers.destinationPart
    local whatever = part1.CFrame:lerp(part2.CFrame, testvalue)
    local iguess = Vector3.new(whatever.X,part2.Position.Y,whatever.Z)
    local carprimary = car
    local destination = iguess
    
    
    local path = PathfindingService:CreatePath({
       AgentRadius = 20
       })
    
    path:ComputeAsync(carprimary.PrimaryPart.Position, destination)
    print(path:ComputeAsync(carprimary.PrimaryPart.Position, destination))
    local waypoints = path:GetWaypoints()
    
    for yay, waypoint in pairs(waypoints) do
       print("test")
    local part = Instance.new("Part")
    part.Shape = "Ball"
    part.Size = Vector3.new(0.6, 0.6, 0.6)
    part.Position = waypoint.Position
    part.Anchored = true
    part.CanCollide = false
    part.Parent = game.Workspace
    local chr = game.Players.LocalPlayer.Character
    local car = chr.Humanoid.SeatPart.Parent.Parent
    local raycastParams = RaycastParams.new()
    raycastParams.FilterDescendantsInstances = {chr,car,workspace.Camera}
    raycastParams.FilterType = Enum.RaycastFilterType.Exclude
    raycastParams.IgnoreWater = true
    if workspace:Raycast(waypoint.Position, Vector3.new(0, 1000, 0),raycastParams) == nil then
    car:PivotTo(part.CFrame+Vector3.new(0,5,0))
    part:Destroy()
    testvalue = 1
    task.wait(0.009)
    elseif workspace:Raycast(waypoint.Position, Vector3.new(0, 1000, 0),raycastParams) ~= nil then
      print(workspace:Raycast(waypoint.Position, Vector3.new(0, 1000, 0),raycastParams))
      part:Destroy()
      testvalue = 1
    end
    end
    end)
    elseif game:GetService("Players").LocalPlayer.variables.inMission.Value == false then
      getfenv().rat = nil
    local distance = math.huge
    for i,v in pairs(game:GetService("Workspace").NewCustomers:GetDescendants()) do
              if v.Name == "Part" and v:GetAttribute("GroupSize") ~= nil  and v:FindFirstChildOfClass("CFrameValue") and game.Players.LocalPlayer.variables.seatAmount.Value > v:GetAttribute("GroupSize") and v:GetAttribute("Rating") < game:GetService("Players").LocalPlayer.variables.vehicleRating.Value and game:GetService("Players").LocalPlayer.variables.inMission.Value == false then

         print(v)
           local Dist = (v.Position-Vector3.new(v:FindFirstChildOfClass("CFrameValue").Value.X,v:FindFirstChildOfClass("CFrameValue").Value.Y,v:FindFirstChildOfClass("CFrameValue").Value.Z)).magnitude
    if Dist < distance then
    distance = Dist
    getfenv().rat = v
    end
    end
    end
       for ok,ya in pairs(game:GetService("Workspace").Vehicles:GetDescendants()) do
                 if ya.Name == "Player" and ya.Value == game.Players.LocalPlayer  then
    ya.Parent.Parent:SetPrimaryPartCFrame(getfenv().rat.CFrame*CFrame.new(0,3,0))
    wait(1)
    fireproximityprompt(getfenv().rat.Client.PromptPart.CustomerPrompt)
    wait(3)
    end
    end
    end
    elseif game.Players.LocalPlayer.Character.Humanoid.SeatPart == nil then
          game:GetService("ReplicatedStorage").Vehicles.GetNearestSpot:InvokeServer(game:GetService("Players").LocalPlayer.variables.carId.Value)
        wait(0.5)
        game:GetService("ReplicatedStorage").Vehicles.EnterVehicleEvent:InvokeServer()
    end
    end)
    end
  end)
about:Toggle("自动奖杯","Toggle",false,function(state)
  getfenv().Trophies = (state and true or false)
game:GetService("ReplicatedStorage").Race.LeaveRace:InvokeServer()
getfenv().showui = getfenv().Trophies
 spawn(function()
      if getfenv().showui == false and game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Money:FindFirstChild("Rep") then
game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Money.Rep:Destroy()
else
while getfenv().showui do
    task.wait()
if not game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Money:FindFirstChild("Rep") then
local oh = game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Money.CashLabel:Clone()
oh.Name = "Rep"
oh.Parent = game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Money
wait()
game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Money.Rep.Position = UDim2.new(3,0,0,0)
else
game:GetService("Players").LocalPlayer.PlayerGui.ScreenGui.Money.Rep.Text = "Rep:"..tostring(game:GetService("Players").LocalPlayer.variables.rep.Value)
end
end
end
end) 
       while getfenv().Trophies  do
            task.wait()
            pcall(function()
      if game.Players.LocalPlayer.Character.Humanoid.Sit == true then
    if game:GetService("Players").LocalPlayer.variables.race.Value == "none" then
        task.wait()
    game:GetService("ReplicatedStorage").Race.TimeTrial:InvokeServer("circuit", 5)
    else
    for a,b in pairs(game:GetService("Workspace").Vehicles:GetDescendants()) do
        if b.Name == "Player" and b.Value == game.Players.LocalPlayer then
    for i,v in pairs(game:GetService("Workspace").Races["circuit"].detects:GetChildren()) do
        if v.ClassName == "Part" and v:FindFirstChild("TouchInterest") then
            v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
            firetouchinterest(b.Parent.Parent.PrimaryPart,v,0)
                    firetouchinterest(b.Parent.Parent.PrimaryPart,v,1)
    
        end
    end
    game:GetService("Workspace").Races["circuit"].timeTrial:FindFirstChildOfClass("IntValue").finish.CFrame =  game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
firetouchinterest(b.Parent.Parent.PrimaryPart,game:GetService("Workspace").Races["circuit"].timeTrial:FindFirstChildOfClass("IntValue").finish,0)
                    firetouchinterest(b.Parent.Parent.PrimaryPart,game:GetService("Workspace").Races["circuit"].timeTrial:FindFirstChildOfClass("IntValue").finish,1)
    end
     end   
    end
    elseif game.Players.LocalPlayer.Character.Humanoid.Sit == false then
        game:GetService("ReplicatedStorage").Vehicles.GetNearestSpot:InvokeServer(game:GetService("Players").LocalPlayer.variables.carId.Value)
        wait(0.5)
        game:GetService("ReplicatedStorage").Vehicles.EnterVehicleEvent:InvokeServer()
    end
    end)
        end
end)
about:Toggle("自动时间奖牌","Toggle",false,function(state)
  getfenv().medals = (state and true or false)
  game:GetService("ReplicatedStorage").Race.LeaveRace:InvokeServer()
  while getfenv().medals  do
       task.wait()
 if game.Players.LocalPlayer.Character.Humanoid.Sit == true then
   for round=1,3 do
   for what,races in pairs(game:GetService("Workspace").Races:GetChildren()) do
     if races.ClassName == "Folder" and getfenv().medals then
game:GetService("ReplicatedStorage").Race.TimeTrial:InvokeServer(races.Name, round)
wait()
if game:GetService("Players").LocalPlayer.variables.race.Value == "none" then
   task.wait()
game:GetService("ReplicatedStorage").Race.TimeTrial:InvokeServer(races.Name, round)
else
   for a,b in pairs(game:GetService("Workspace").Vehicles:GetDescendants()) do
   if b.Name == "Player" and b.Value == game.Players.LocalPlayer then
 repeat wait()
for i,v in pairs(game:GetService("Workspace").Races[races.Name].detects:GetChildren()) do
   if v.ClassName == "Part" and v:FindFirstChild("TouchInterest") then
      v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
       firetouchinterest(b.Parent.Parent.PrimaryPart,v,0)
               firetouchinterest(b.Parent.Parent.PrimaryPart,v,1)
   end
end
until game:GetService("Workspace").Races[races.Name].timeTrial:FindFirstChildOfClass("IntValue") or getfenv().medals == false
repeat wait()
 for i,v in pairs(game:GetService("Workspace").Races[races.Name].detects:GetChildren()) do
   if v.ClassName == "Part" and v:FindFirstChild("TouchInterest") then
      v.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
       firetouchinterest(b.Parent.Parent.PrimaryPart,v,0)
               firetouchinterest(b.Parent.Parent.PrimaryPart,v,1)
   end
end
 pcall(function()
 game:GetService("Workspace").Races[races.Name].timeTrial:FindFirstChildOfClass("IntValue").finish.CFrame=game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame
firetouchinterest(b.Parent.Parent.PrimaryPart,game:GetService("Workspace").Races[races.Name].timeTrial:FindFirstChildOfClass("IntValue").finish,0)
               firetouchinterest(b.Parent.Parent.PrimaryPart,game:GetService("Workspace").Races[races.Name].timeTrial:FindFirstChildOfClass("IntValue").finish,1)
end)
until game:GetService("Players").LocalPlayer.variables.race.Value == "none" or getfenv().medals == false
end
end 
end

end
end
end
elseif game.Players.LocalPlayer.Character.Humanoid.Sit == false then
   game:GetService("ReplicatedStorage").Vehicles.GetNearestSpot:InvokeServer(game:GetService("Players").LocalPlayer.variables.carId.Value)
   wait(0.5)
   game:GetService("ReplicatedStorage").Vehicles.EnterVehicleEvent:InvokeServer()
end
   end
end)
about:Toggle("自动升级办公室","Toggle",false,function(state)
    getfenv().ofs = (state and true or false)
    while getfenv().ofs do
        wait()
    if not game:GetService("Players").LocalPlayer:FindFirstChild("Office") then
    game:GetService("ReplicatedStorage").Company.StartOffice:InvokeServer()
    wait(0.2)
    end
    if game:GetService("Players").LocalPlayer.Office:GetAttribute("level") <16 then
    game:GetService("ReplicatedStorage").Company.SkipOfficeQuest:InvokeServer()
    game:GetService("ReplicatedStorage").Company.UpgradeOffice:InvokeServer()
    end
    end
    end)

local UITab2 = win:Tab("『传送区』",'16060333448')

local about = UITab2:section("『传送1』",true)

about:Dropdown("传送点",   "FreeBoat", {"山毛榉木","山毛榉木海滩","老板机场","桥视图","雪松侧","中央银行","中央城市","城市公园","椰子公园","乡村俱乐部","大山","总督海港"}, function(state)
        if state == "山毛榉木" then
            local chr = game.Players.LocalPlayer.Character
            local hum = chr.Humanoid
            if hum.SeatPart == nil then
            chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places.Beechwood.Position)+Vector3.new(0,30,0))
            elseif hum.SeatPart ~= nil then
                hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places.Beechwood.CFrame+Vector3.new(0,40,0))
            end
            elseif state == "山毛榉木海滩" then
                local location = "Beechwood Beach"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
                elseif state == "老板机场" then
                    local location = "Boss Airport"
                    local chr = game.Players.LocalPlayer.Character
                    local hum = chr.Humanoid
                    if hum.SeatPart == nil then
                    chr:PivotTo(CFrame.new(-637.1304931640625, 38.99796676635742, 4325.2275390625)+Vector3.new(0,30,0))
                    elseif hum.SeatPart ~= nil then
                        hum.SeatPart.Parent.Parent:PivotTo(CFrame.new(-637.1304931640625, 38.99796676635742, 4325.2275390625)+Vector3.new(0,40,0))
                    end
                elseif state == "桥梁视图" then
                    local location = "Bridgeview"
                    local chr = game.Players.LocalPlayer.Character
                    local hum = chr.Humanoid
                    if hum.SeatPart == nil then
                    chr:PivotTo(CFrame.new(1354.4610595703125, 10.30431079864502, 1278.8033447265625)+Vector3.new(0,30,0))
                    elseif hum.SeatPart ~= nil then
                        hum.SeatPart.Parent.Parent:PivotTo(CFrame.new(1354.4610595703125, 10.30431079864502, 1278.8033447265625)+Vector3.new(0,40,0))
                    end
            elseif state == "雪松侧" then
                local location = "Cedar Side"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
            elseif state == "中央银行" then
                local location = "Central Bank"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
            elseif state == "中心城" then
                local location = "Central City"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
            elseif state == "城市公园" then
                local location = "City Park"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
            elseif state == "椰子公园" then
                local location = "Coconut Park"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
            elseif state == "乡村俱乐部" then
                local location = "Country Club"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
            elseif state == "大山" then
                local location = "Da Hills"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(2348.347412109375, 73.10881805419922, -1537.3157958984375)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(CFrame.new(2348.347412109375, 73.10881805419922, -1537.3157958984375)+Vector3.new(0,40,0))
                end
            elseif state == "总督海港" then
                local location = "Doge Harbor"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(3335.737548828125, 24.955890655517578, 2773.038818359375)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(CFrame.new(3335.737548828125, 24.955890655517578, 2773.038818359375)+Vector3.new(0,40,0))
                end
            end
        end)
 local about = UITab2:section("『传送2』",true)
        
about:Dropdown("传送点",   "FreeBoat", {"加油站","加油站2","港景","山楂公园","医院","工业区","物流区","大师酒店","军事基地","拿冠悬崖","核电站","核电站","越野检测轨道"}, function(state)
        if state == "加油站" then
            local location = "Gas Station"
            local chr = game.Players.LocalPlayer.Character
            local hum = chr.Humanoid
            if hum.SeatPart == nil then
            chr:PivotTo(CFrame.new(103.700256, 0, -640.599792)+Vector3.new(0,30,0))
            elseif hum.SeatPart ~= nil then
                hum.SeatPart.Parent.Parent:PivotTo(CFrame.new(103.700256, 0, -640.599792)+Vector3.new(0,40,0))
            end
        elseif state == "加油站2" then
            local location = "Gas Station 2"
            local chr = game.Players.LocalPlayer.Character
            local hum = chr.Humanoid
            if hum.SeatPart == nil then
            chr:PivotTo(CFrame.new(930.7002563476562, 0, 643.4002075195312)+Vector3.new(0,30,0))
            elseif hum.SeatPart ~= nil then
                hum.SeatPart.Parent.Parent:PivotTo(CFrame.new(930.7002563476562, 0, 643.4002075195312)+Vector3.new(0,40,0))
            end
        elseif state == "港景" then
            local location = "Harborview"
            local chr = game.Players.LocalPlayer.Character
            local hum = chr.Humanoid
            if hum.SeatPart == nil then
            chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
            elseif hum.SeatPart ~= nil then
                hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
            end
        elseif state == "山楂公园" then
            local location = "Hawthorn Park"
            local chr = game.Players.LocalPlayer.Character
            local hum = chr.Humanoid
            if hum.SeatPart == nil then
            chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
            elseif hum.SeatPart ~= nil then
                hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
            end
        elseif state == "医院" then
            local location = "Hospital"
            local chr = game.Players.LocalPlayer.Character
            local hum = chr.Humanoid
            if hum.SeatPart == nil then
            chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
            elseif hum.SeatPart ~= nil then
                hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
            end
        elseif state == "工业区" then 
            local location = "Industrial District"
        local chr = game.Players.LocalPlayer.Character
        local hum = chr.Humanoid
        if hum.SeatPart == nil then
        chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
        elseif hum.SeatPart ~= nil then
            hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
        end
    elseif state == "物流区" then 
        local location = "Logistic District"
        local chr = game.Players.LocalPlayer.Character
        local hum = chr.Humanoid
        if hum.SeatPart == nil then
        chr:PivotTo(CFrame.new(588.2861938476562, 53.5777473449707, 2529.95361328125)+Vector3.new(0,30,0))
        elseif hum.SeatPart ~= nil then
            hum.SeatPart.Parent.Parent:PivotTo(CFrame.new(588.2861938476562, 53.5777473449707, 2529.95361328125)+Vector3.new(0,40,0))
        end
    elseif state == "大师酒店" then 
        local location = "Master Hotel"
        local chr = game.Players.LocalPlayer.Character
        local hum = chr.Humanoid
        if hum.SeatPart == nil then
        chr:PivotTo(CFrame.new(2736.1591796875, 15.864909172058105, -202.09945678710938)+Vector3.new(0,30,0))
        elseif hum.SeatPart ~= nil then
            hum.SeatPart.Parent.Parent:PivotTo(CFrame.new(2736.1591796875, 15.864909172058105, -202.09945678710938)+Vector3.new(0,40,0))
        end
    elseif state == "军事基地" then 
        local location = "Military Base"
        local chr = game.Players.LocalPlayer.Character
        local hum = chr.Humanoid
        if hum.SeatPart == nil then
        chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
        elseif hum.SeatPart ~= nil then
            hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
        end
    elseif state == "拿冠悬崖" then 
        local location = "Noll Cliffs"
        local chr = game.Players.LocalPlayer.Character
        local hum = chr.Humanoid
        if hum.SeatPart == nil then
        chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
        elseif hum.SeatPart ~= nil then
            hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
        end
    elseif state == "核电站" then 
        local location = "Nuclear Power Plant"
        local chr = game.Players.LocalPlayer.Character
        local hum = chr.Humanoid
        if hum.SeatPart == nil then
        chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
        elseif hum.SeatPart ~= nil then
            hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
        end
    elseif state == "越野检测轨道" then 
        local location = "OFF ROAD Test Track"
        local chr = game.Players.LocalPlayer.Character
        local hum = chr.Humanoid
        if hum.SeatPart == nil then
        chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
        elseif hum.SeatPart ~= nil then
            hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
        end
        end
        end)
local about = UITab2:section("『传送3』",true)
about:Dropdown("传送点",   "FreeBoat", {""海景点","炼油厂","老镇","流行的街道","小镇","圣纳尔观点","晴朗的小学","日落树丛","出租车","高中","购物中心","海边","\240\159\143\134 Race Club"}, function(state)
            if state == "海景点" then
                local location = "Ocean Viewpoint"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
        
            elseif state == "炼油厂" then 
                local location = "Oil Refinery"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
            elseif state == "老镇" then 
                local location = "Old Town"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
            elseif state == "流行的街道" then 
                local location = "Popular Street"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
            elseif state == "小镇" then 
                local location = "Small Town"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
            elseif state == "圣纳尔观点" then 
                local location = "St. Noll Viewpoint"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
            elseif state == "晴朗的小学" then 
                local location = "Sunny Elementary"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
            elseif state == "日落树丛" then 
                local location = "Sunset Grove"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
            elseif state == "出租车" then 
                local location = "Taxi Central"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
            elseif state == "高中" then 
                local location = "high school"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
            elseif state == "购物中心" then 
                local location = "mall"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
            elseif state == "海边" then 
                local location = "the beach"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
            elseif state == "\240\159\143\134 Race Club" then
                local location = "\240\159\143\134 Race Club"
                local chr = game.Players.LocalPlayer.Character
                local hum = chr.Humanoid
                if hum.SeatPart == nil then
                chr:PivotTo(CFrame.new(game:GetService("ReplicatedStorage").Places[location].Position)+Vector3.new(0,30,0))
                elseif hum.SeatPart ~= nil then
                    hum.SeatPart.Parent.Parent:PivotTo(game:GetService("ReplicatedStorage").Places[location].CFrame+Vector3.new(0,40,0))
                end
            end
        end)
local UITab2 = win:Tab("『杂项』",'16060333448')

local about = UITab2:section("『xxxxxxxgo』",true)

about:Label("车辆买家",function()
end)
about:Box("车名", function(object, focus)
  if focus then
      local car = tostring(object.Text)
for i,v in pairs(require(game:GetService("ReplicatedStorage").ModuleLists.CarList)) do
    if string.find(v.name,car) then
       game:GetService("ReplicatedStorage").DataStore.PurchaseVehicle:InvokeServer(v.id)
    end
    end
end
end)
about:Button("解锁出租车雷达",function()
    game:GetService("Players").LocalPlayer.variables.vip.Value = true
end)
about:Button("显示玩家统计",function()
    game:GetService("VirtualInputManager"):SendKeyEvent(true,"F9",false,game)
    print("Players Owned Cars")
    for i,v in pairs(game.Players:GetChildren()) do
        if v.ClassName == "Player" then
            print("------xgo---------"..v.Name.." OwnedCars".."-----xgo----------")
      local tables = {}
      local racetable = {}
        for a,b in pairs(v.Data.OwnedCars:GetChildren()) do
            if b:IsA("BoolValue") and b.Value == true then
               for c,d in pairs(require(game:GetService("ReplicatedStorage").ModuleLists.CarList)) do
               if d.id == tonumber(b.Name) then
               table.insert(tables,d.name..",")
            end
        end
        end
        end

    warn(unpack(tables))
    print("-------xgo---------"..v.Name.." Currencies".."--------xgo-------")
    warn(v.variables.candy.Name..": "..v.variables.candy.Value,v.variables.rep.Name..": "..v.variables.rep.Value,v.Data.coconuts.Name..": "..v.Data.coconuts.Value)
    print("-------xgo--------"..v.Name.." Race Best Times".."-------xgo-------")
    for ok,p in pairs(v.Data.BestTimes:GetAttributes()) do
    rawset(racetable,ok,p)
    end
    for lol,s in pairs(racetable) do
        warn(lol,s)
    end
    end
    end
end)
about:Button("重置字符",function()
    game.Players.LocalPlayer.Character:BreakJoints()
end)
about:Button("删除AI车辆",function()
    game:GetService("Workspace").Tracks:Destroy()
end)
about:Button("去除锁定区域障碍",function()
    game:GetService("Workspace").AreaLocked:Destroy()
end)

about:Toggle("甜甜圈上帝","Toggle",false, function(state)
getfenv().donut = (state and true or false)
while getfenv().donut do
    task.wait()
pcall(function()
local part = game.Players.LocalPlayer.Character.Humanoid.SeatPart
part.RotVelocity = Vector3.new(0,part.RotVelocity.Y+10,0)
end)
end
end)
